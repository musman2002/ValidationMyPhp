name: Release

on:
  push:
    tags:
       - '*'
jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Archive the package
      - name: Create archive
        uses: vimtor/action-zip@v1
        with:
          files: ./
          dest: ValidationMyPhp.zip

      # Create the release:  https://github.com/actions/create-release
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      # Upload release asset:   https://github.com/actions/upload-release-asset
      - name: Update release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./ValidationMyPhp.zip
          asset_name: ValidationMyPhp.zip
          asset_content_type: application/zip
          
      - name: Update Packagist
        uses: mnavarrocarter/packagist-update@v1.0
        with:
          username: "rizwan3d"
          api_token: ${{ secrets.packagist_token }}
          package_name: rizwan3d/validation-my-php
          domain: "packagist.org" # This is by default, so no need to specify this.
